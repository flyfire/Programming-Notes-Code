//========================================================================
// 数组的常用方法
//========================================================================

/*
 concat()	连接两个或更多的数组，并返回新的数组
 join()	把数组的所有元素放入一个字符串。元素通过指定的分隔符进行分隔
 pop()	删除并返回数组的最后一个元素
 push()	向数组的末尾添加一个或更多元素，并返回新的长度
 reverse()	颠倒数组中元素的顺序。会修改数组
 shift()	删除并返回数组的第一个元素
 slice()	从某个已有的数组返回选定的元素，返回新的数组
 sort()	对数组的元素进行排序，会修改数组，还可以传入function对排序进行设定，负前正后
 splice() 	删除元素，并向数组添加新元素，splice是在数组中插入或者删除元素的通用方法，会修改数组，第一个参数表示插入或删除的起始位置，第二个参数表示从数组中应该删除的个数
 toSource()	返回该对象的源代码
 toString()	把数组转换为字符串，并返回结果
 toLocaleString()	把数组转换为本地数组，并返回结果
 unshift()	向数组的开头添加一个或更多元素，并返回新的长度
 valueOf()	返回数组对象的原始值
 */

//join
var a = [1, 2, 3, 4, 5, 6];
console.log(a.join('--'));//->1--2--3--4--5--6

//反转数组，会修改数组
a.reverse();
console.log(a);//->[ 6, 5, 4, 3, 2, 1 ]

//sort
var b = ["z", "y", "x"];
b.sort();
console.log(b);//->[ 'x', 'y', 'z' ]

// concat连接两个或更多的数组，并返回新的数组
console.log(a.concat(3));//[ 6, 5, 4, 3, 2, 1, 3 ]
console.log(a.concat([3, 5], 9, [4, [4]]));//->[ 6, 5, 4, 3, 2, 1, 3, 5, 9, 4, [ 4 ] ]

// slice从某个已有的数组返回选定的元素，返回新的数组
console.log(a.slice(0, 3));//->[ 6, 5, 4 ]
console.log(a.slice(1, -1));//-1相对于最后一个数组，[ 5, 4, 3, 2 ]

//splice是在数组中插入或者删除元素的通用方法，会修改数组，第一个参数表示插入或删除的起始位置，第二个参数表示从数组中应该删除的个数
var a = [1, 2, 3, 4, 5, 6, 7, 8, 9];
var newA = a.splice(4);
console.log(newA);//->[ 5, 6, 7, 8, 9 ]
console.log(a);//->[ 1, 2, 3, 4 ]

var a = [1, 2, 3, 4, 5];
var newA = a.splice(2, 0, "a", "b");
console.log(a);//->[ 1, 2, 'a', 'b', 3, 4, 5 ]
console.log(newA);//->[]
console.log(a);//[ 1, 2, 'a', 'b', 3, 4, 5 ]

var newA = a.splice(2, 2, [1, 2], "b");
console.log(newA);//[ 'a', 'b' ]
console.log(a);//[ 1, 2, [ 1, 2 ], 'b', 3, 4, 5 ]




